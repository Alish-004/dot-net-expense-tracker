@page "/add-expense"
@using coursework.Service
@using coursework.Models
@inject ExpenseService ExpenseService

<PageTitle>Add Expense</PageTitle>

<div style="margin: 50px auto; padding: 30px; max-width: 600px; background-color: #f7f3fc; border-radius: 10px; box-shadow: 0 4px 8px rgba(128, 0, 128, 0.2);">
    <h1 style="text-align: center; color: #4a148c; margin-bottom: 20px; font-size: 1.8rem;">Add New Expense</h1>

    @if (isSuccessVisible)
    {
        <div style="margin-bottom: 20px; padding: 15px; background-color: #e8f5e9; border: 1px solid #4caf50; border-radius: 6px; color: #388e3c; text-align: center; font-size: 1rem;">
            Expense "<strong>@expense.Name</strong>" added successfully!
        </div>
    }

    <EditForm Model="expense" OnValidSubmit="HandleSubmit" style="display: flex; flex-direction: column; gap: 15px;">
        <div style="margin-bottom: 15px;">
            <label for="name" style="display: block; margin-bottom: 8px; font-size: 1rem; color: #6a1b9a;">Expense Name:</label>
            <input type="text" id="name" style="width: 100%; padding: 10px; font-size: 1rem; border: 1px solid #d1c4e9; border-radius: 6px; background-color: #fff;" @bind="expense.Name" placeholder="Enter expense name" />
        </div>

        <div style="margin-bottom: 15px;">
            <label for="description" style="display: block; margin-bottom: 8px; font-size: 1rem; color: #6a1b9a;">Description:</label>
            <textarea id="description" style="width: 100%; padding: 10px; font-size: 1rem; border: 1px solid #d1c4e9; border-radius: 6px; background-color: #fff;" @bind="expense.Description" placeholder="Enter description"></textarea>
        </div>

        <div style="margin-bottom: 15px;">
            <label for="category" style="display: block; margin-bottom: 8px; font-size: 1rem; color: #6a1b9a;">Category:</label>
            <select id="category" style="width: 100%; padding: 10px; font-size: 1rem; border: 1px solid #d1c4e9; border-radius: 6px; background-color: #fff;" @bind="expense.Type">
                <option value="">Select a category</option>
                <option value="Food">Food</option>
                <option value="Transport">Transport</option>
                <option value="Entertainment">Entertainment</option>
                <option value="Utilities">Utilities</option>
                <option value="Other">Other</option>
            </select>
        </div>

        <div style="margin-bottom: 15px;">
            <label for="amount" style="display: block; margin-bottom: 8px; font-size: 1rem; color: #6a1b9a;">Amount:</label>
            <input type="number" id="amount" style="width: 100%; padding: 10px; font-size: 1rem; border: 1px solid #d1c4e9; border-radius: 6px; background-color: #fff;" @bind="expense.amount" placeholder="Enter amount" />
        </div>

        <div style="margin-bottom: 15px;">
            <button type="submit" style="width: 100%; padding: 12px; font-size: 1rem; font-weight: 600; color: white; background-color: #6a1b9a; border: none; border-radius: 6px; cursor: pointer; transition: background-color 0.3s;">Add Expense</button>
        </div>

        <a href="/home" style="display: block; text-align: center; padding: 12px; font-size: 1rem; font-weight: 600; color: white; background-color: #9c27b0; text-decoration: none; border-radius: 6px; transition: background-color 0.3s;">Back</a>
    </EditForm>
</div>

@code {
    private Expense expense = new Expense(); // Expense model to bind the form fields
    private bool isSuccessVisible = false; // Tracks visibility of success message

    // Method to handle form submission
    private void HandleSubmit()
    {
        // Add the expense using the ExpenseService
        ExpenseService.AddExpense(expense);

        // Show success message
        isSuccessVisible = true;

        // Reset the form
        expense = new Expense();

        // Hide success message after a delay (optional)
        _ = Task.Delay(3000).ContinueWith(_ => InvokeAsync(() => isSuccessVisible = false));
    }
}
