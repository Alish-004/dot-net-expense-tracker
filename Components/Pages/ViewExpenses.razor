@page "/view-expenses"
@using coursework.Service
@using coursework.Models
@inject coursework.Service.ExpenseService ExpenseService

<PageTitle>View Expenses</PageTitle>

<div style="margin: 50px auto; padding: 30px; max-width: 700px; background-color: #f3e5f5; border-radius: 10px; box-shadow: 0 4px 8px rgba(128, 0, 128, 0.2);">
    <h1 style="text-align: center; color: #8e24aa; margin-bottom: 20px; font-size: 1.8rem;">All Expenses</h1>

    @if (expenses == null || !expenses.Any())
    {
        <p style="text-align: center; color: #6a1b9a; font-size: 1rem;">No expenses available.</p>
    }
    else
    {
        <ul style="list-style: none; padding: 0;">
            @foreach (var expense in expenses)
            {
                <li style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; padding: 15px; border: 1px solid #9c4dcc; border-radius: 8px; background-color: #ffffff;">
                    <div>
                        <strong style="color: #8e24aa; font-size: 1.1rem;">@expense.Name</strong>
                        <br />
                        <span style="color: #6a1b9a; font-size: 0.9rem;">Category: @expense.Type</span>
                        <br />
                        <span style="color: #6a1b9a; font-size: 0.9rem;">Amount: @expense.amount</span>
                    </div>
                    <button style="padding: 10px; font-size: 0.9rem; background-color: #e91e63; color: white; border: none; border-radius: 6px; cursor: pointer; transition: background-color 0.3s;" @onclick="() => ShowDeleteConfirmation(expense.Id)">Delete</button>
                </li>
            }
        </ul>
    }

    <a href="/home" style="display: block; margin-top: 20px; padding: 12px; text-align: center; font-size: 1rem; font-weight: 600; color: white; background-color: #8e24aa; text-decoration: none; border-radius: 6px; transition: background-color 0.3s;">Back to Home</a>

    <!-- Confirmation Popup -->
    @if (isPopupVisible)
    {
        <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: flex; justify-content: center; align-items: center;">
            <div style="background-color: white; padding: 20px; border-radius: 10px; max-width: 400px; text-align: center; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">
                <h3 style="color: #8e24aa; margin-bottom: 20px;">Are you sure you want to delete this expense?</h3>
                <button style="margin-right: 10px; padding: 10px 20px; font-size: 1rem; background-color: #e91e63; color: white; border: none; border-radius: 6px; cursor: pointer; transition: background-color 0.3s;" @onclick="DeleteExpense">Yes, Delete</button>
                <button style="padding: 10px 20px; font-size: 1rem; background-color: #8e24aa; color: white; border: none; border-radius: 6px; cursor: pointer; transition: background-color 0.3s;" @onclick="CancelDelete">Cancel</button>
            </div>
        </div>
    }
</div>

@code {
    private List<Expense> expenses;
    private bool isPopupVisible = false;
    private int expenseToDeleteId;

    protected override void OnInitialized()
    {
        LoadExpenses();
    }

    private void LoadExpenses()
    {
        expenses = ExpenseService.GetAllExpenses();
    }

    private void ShowDeleteConfirmation(int expenseId)
    {
        isPopupVisible = true;
        expenseToDeleteId = expenseId;
    }

    private void DeleteExpense()
    {
        bool deleted = ExpenseService.DeleteExpense(expenseToDeleteId);
        if (deleted)
        {
            // Refresh the list after deletion
            LoadExpenses();
        }

        isPopupVisible = false; // Hide the confirmation popup
    }

    private void CancelDelete()
    {
        isPopupVisible = false; // Hide the confirmation popup without deleting
    }
}
