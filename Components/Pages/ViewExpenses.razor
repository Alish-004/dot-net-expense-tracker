@page "/view-expenses"
@using coursework.Service
@using coursework.Models
@inject coursework.Service.ExpenseService ExpenseService

<PageTitle>View Expenses</PageTitle>

<div class="view-expenses-container">
    <h1>All Expenses</h1>

    @if (expenses == null || !expenses.Any())
    {
            <p>No expenses available.</p>
    }
    else
    {
            <ul class="expense-list">
            @foreach (var expense in expenses)
            {
                        <li>
                            <span><strong>@expense.Name</strong> - @expense.Type</span>
                            <span>Amount: @expense.amount</span>
                            <button class="btn btn-danger" @onclick="() => ShowDeleteConfirmation(expense.Id)">Delete</button>
                        </li>
            }
            </ul>
    }

    <!-- Confirmation Popup -->
    @if (isPopupVisible)
    {
            <div class="popup">
                <div class="popup-content">
                    <h3>Are you sure you want to delete this expense?</h3>
                    <button class="btn btn-danger" @onclick="DeleteExpense">Yes, Delete</button>
                    <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
                </div>
            </div>
    }

</div>

<style>
    .view-expenses-container {
        margin-left: 220px; /* Align with the NavMenu */
        padding: 20px;
        max-width: 600px;
        margin-top: 50px;
    }

    h1 {
        margin-bottom: 20px;
    }

    .expense-list {
        list-style-type: none;
        padding-left: 0;
    }

    .expense-list li {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .btn {
        padding: 10px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn:hover {
        background-color: #0056b3;
    }

    .btn-danger {
        background-color: #dc3545;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }

    .btn-secondary {
        background-color: #6c757d;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    /* Popup Styles */
    .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .popup-content {
        background-color: white;
        padding: 20px;
        border-radius: 5px;
        max-width: 400px;
        text-align: center;
    }
</style>

@code {
    private List<Expense> expenses;
    private bool isPopupVisible = false;
    private int expenseToDeleteId;

    protected override void OnInitialized()
    {
        LoadExpenses();
    }

    private void LoadExpenses()
    {
        expenses = ExpenseService.GetAllExpenses();
    }

    private void ShowDeleteConfirmation(int expenseId)
    {
        isPopupVisible = true;
        expenseToDeleteId = expenseId;
    }

    private void DeleteExpense()
    {
        bool deleted = ExpenseService.DeleteExpense(expenseToDeleteId);
        if (deleted)
        {
            // Refresh the list after deletion
            LoadExpenses();
        }

        isPopupVisible = false; // Hide the confirmation popup
    }

    private void CancelDelete()
    {
        isPopupVisible = false; // Hide the confirmation popup without deleting
    }
}
